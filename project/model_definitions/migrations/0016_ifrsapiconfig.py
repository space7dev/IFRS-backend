# Generated by Django 3.2.12 on 2025-08-22 20:25

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('model_definitions', '0015_alter_reporttype_report_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='IFRSApiConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified_on', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('api_source_name', models.CharField(help_text='API source name', max_length=255)),
                ('client_id', models.CharField(help_text='Client ID / System name', max_length=255)),
                ('api_endpoint', models.CharField(help_text='API endpoint (masked for security)', max_length=500)),
                ('data_type', models.CharField(help_text='Data type', max_length=100)),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST')], default='GET', help_text='HTTP method', max_length=10)),
                ('auth_type', models.CharField(choices=[('api_key', 'API Key'), ('oauth', 'OAuth'), ('basic', 'Basic Auth'), ('bearer', 'Bearer Token'), ('none', 'None')], default='api_key', help_text='Authentication type', max_length=20)),
                ('schedule', models.CharField(choices=[('manual', 'Manual'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semi_annually', 'Semi-Annually'), ('yearly', 'Yearly')], default='manual', help_text='Execution schedule', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('disabled', 'Disabled'), ('error', 'Error')], default='active', help_text='Configuration status', max_length=20)),
                ('headers_query_params', models.JSONField(blank=True, default=dict, help_text='Headers and query parameters as key-value pairs')),
                ('pagination_strategy', models.CharField(choices=[('none', 'None'), ('page_limit', 'Page/Limit'), ('cursor_next_token', 'Cursor/Next Token'), ('link_based', 'Link-based')], default='none', help_text='Pagination strategy', max_length=20)),
                ('page_param_name', models.CharField(blank=True, help_text='Page parameter name for pagination', max_length=50, null=True)),
                ('limit_param_name', models.CharField(blank=True, help_text='Limit parameter name for pagination', max_length=50, null=True)),
                ('next_token_jsonpath', models.CharField(blank=True, help_text='JSONPath for next page token', max_length=200, null=True)),
                ('limit_value', models.IntegerField(blank=True, help_text='Default limit value for pagination', null=True)),
                ('watermark_field_name', models.CharField(blank=True, help_text='Watermark field name (e.g., updated_at)', max_length=100, null=True)),
                ('watermark_format', models.CharField(blank=True, choices=[('iso8601', 'ISO8601'), ('date', 'Date'), ('epoch', 'Epoch')], default='iso8601', help_text='Watermark format', max_length=20, null=True)),
                ('watermark_location', models.CharField(blank=True, choices=[('query_param', 'Query Parameter'), ('header', 'Header'), ('body', 'Body')], default='query_param', help_text='Watermark location', max_length=20, null=True)),
                ('default_initial_watermark', models.CharField(blank=True, help_text='Default initial watermark value', max_length=100, null=True)),
                ('records_jsonpath', models.CharField(blank=True, help_text='JSONPath for records (e.g., $.data.items[*])', max_length=200, null=True)),
                ('next_page_token_jsonpath', models.CharField(blank=True, help_text='JSONPath for next page token', max_length=200, null=True)),
                ('total_count_jsonpath', models.CharField(blank=True, help_text='JSONPath for total count', max_length=200, null=True)),
                ('primary_key_fields', models.JSONField(blank=True, default=list, help_text='Primary key fields for deduplication')),
                ('behavior', models.CharField(choices=[('append_only', 'Append Only'), ('upsert_on_key', 'Upsert on Key')], default='append_only', help_text='Drop/Upsert behavior', max_length=20)),
                ('max_rps', models.IntegerField(default=10, help_text='Maximum requests per second')),
                ('retry_count', models.IntegerField(default=3, help_text='Number of retries on failure')),
                ('backoff_min_ms', models.IntegerField(default=200, help_text='Minimum backoff time in milliseconds')),
                ('backoff_max_ms', models.IntegerField(default=2000, help_text='Maximum backoff time in milliseconds')),
                ('timeout_ms', models.IntegerField(default=30000, help_text='Request timeout in milliseconds')),
                ('secret_references', models.JSONField(blank=True, default=dict, help_text='Secret references stored in vault')),
                ('tls_required', models.BooleanField(default=True, help_text='Whether TLS is required')),
                ('mtls_certs', models.FileField(blank=True, help_text='mTLS certificates file', null=True, upload_to='api_certs/')),
                ('ip_allowlist_note', models.TextField(blank=True, help_text='IP allowlist notes')),
                ('raw_landing_mode', models.BooleanField(default=True, help_text='Whether to use raw landing mode (JSON per row)')),
                ('mapping_profile', models.CharField(blank=True, help_text='Mapping profile reference', max_length=200, null=True)),
                ('validation_profile', models.CharField(blank=True, help_text='Validation profile reference', max_length=200, null=True)),
                ('owner', models.CharField(help_text='Configuration owner', max_length=100)),
                ('alert_emails', models.JSONField(blank=True, default=list, help_text='Alert email addresses on failure')),
                ('alert_webhooks', models.JSONField(blank=True, default=list, help_text='Alert webhook URLs on failure')),
                ('auto_disable_on_failures', models.IntegerField(default=5, help_text='Auto-disable after N consecutive failures')),
                ('last_test_date', models.DateTimeField(blank=True, help_text='Last connection test date', null=True)),
                ('last_test_status', models.CharField(blank=True, help_text='Last test status', max_length=20, null=True)),
                ('last_run_date', models.DateTimeField(blank=True, help_text='Last execution date', null=True)),
                ('consecutive_failures', models.IntegerField(default=0, help_text='Count of consecutive failures')),
            ],
            options={
                'verbose_name': 'IFRS API Configuration',
                'verbose_name_plural': 'IFRS API Configurations',
                'db_table': 'ifrs_apis',
                'ordering': ['api_source_name', 'client_id'],
            },
        ),
    ]
